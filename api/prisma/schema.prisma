generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @db.Timestamptz

  products Product[]
  orders   Order[]
  Partner  Partner[]
}

model Partner {
  id        String   @id @default(uuid())
  name      String
  city      String
  address   String
  latitude  Float
  longitude Float
  ownerId   String
  createdAt DateTime @default(now()) @db.Timestamptz

  owner  User    @relation(fields: [ownerId], references: [id])
  orders Order[]
}

enum ProductStatus {
  AVAILABLE
  PENDING
  SOLD
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String
  size        String
  school      String
  condition   Int
  price       Float
  status      ProductStatus @default(AVAILABLE)
  createdAt   DateTime      @default(now()) @db.Timestamptz

  sellerId      String
  seller        User            @relation(fields: [sellerId], references: [id])
  order         Order?
  ProductImages ProductImages[]
}

model ProductImages {
  id        String @id @default(uuid())
  productId String
  url       String

  product Product @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

model Order {
  id          String      @id @default(uuid())
  productId   String      @unique
  buyerId     String
  partnerId   String
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now()) @db.Timestamptz
  confirmedAt DateTime?   @db.Timestamptz

  product          Product          @relation(fields: [productId], references: [id])
  buyer            User             @relation(fields: [buyerId], references: [id])
  partner          Partner          @relation(fields: [partnerId], references: [id])
  PaymentHistories PaymentHistory[]
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

model PaymentHistory {
  id        String        @id @default(uuid())
  orderId   String
  createdAt DateTime      @default(now()) @db.Timestamptz
  status    PaymentStatus @default(PENDING)

  order Order @relation(fields: [orderId], references: [id])
}
