version: '3.8'

services:
  db:
    container_name: postgres
    image: bitnami/postgresql:16
    env_file:
      - ./env/postgres/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - uniform-network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:9.2
    env_file:
      - ./env/pgadmin/pgadmin.env
    ports:
      - "80:80"
    restart: always
    depends_on:
      - db
    networks:
      - uniform-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    env_file:
      - ./env/rabbit/rabbitmq.env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - uniform-network

  mongodb:
    container_name: mongodb
    image: mongo:6.0
    env_file:
      - ./env/mongo/mongodb.env
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - uniform-network

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./logs:/logs
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
    networks:
      - uniform-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - loki
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - uniform-network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./logs:/var/log
      - ./loki-config.yaml:/etc/loki/loki-config.yaml

    networks:
      - uniform-network

  # payment-service:
  #   container_name: payment-service
  #   build:
  #     context: ../payment-service
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ../payment-service/.env
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./logs:/app/logs
  #   networks:
  #     - uniform-network
  #   depends_on:
  #     - rabbitmq
  #     - db
  #     - mongodb
  #     - loki

volumes:
  postgres_data:
  rabbitmq_data:
  mongodb_data:
  grafana-storage:

networks:
  uniform-network:
    driver: bridge
